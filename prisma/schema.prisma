generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

type WifiHotspotLocation {
  coordinates Float[]
  type        String
}

model Achievement {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @db.Date
  description String
  icon        String
  points      BigInt
  threshold   BigInt
  title       String
  type        String
  /// Could not determine type: the field only had null or empty values in the sample set.
  unlockedAt  Json?
  userId      String   @db.ObjectId
}

model CoverageComparison {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  timestamp Json?

  @@index([timestamp])
}

model CoverageHistory {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  timestamp Json?

  @@index([timestamp])
}

model CoveragePoint {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  location Json?
  /// Field referred in an index, but found no data to define the type.
  provider Json?
  /// Field referred in an index, but found no data to define the type.
  type     Json?

  @@unique([provider, type, location])
  @@index([provider])
  @@index([type])
}

model CoverageReport {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @db.Date
  latitude  Float
  longitude Float
  operator  String
  points    BigInt
  signal    BigInt
  speed     Float
  updatedAt DateTime @db.Date
  userId    String   @db.ObjectId
  verified  Boolean
}

model ErrorLog {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  timestamp Json?
  /// Field referred in an index, but found no data to define the type.
  userId    Json?

  @@index([userId])
  @@index([timestamp])
}

model LeaderboardEntry {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  points    Json?
  /// Field referred in an index, but found no data to define the type.
  timeframe Json?

  @@index([timeframe, points])
}

model Measurement {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  latitude  Json?
  /// Field referred in an index, but found no data to define the type.
  longitude Json?
  /// Field referred in an index, but found no data to define the type.
  userId    Json?

  @@index([userId])
  @@index([latitude, longitude])
}

model PerformanceLog {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  operation Json?
  /// Field referred in an index, but found no data to define the type.
  timestamp Json?
  /// Field referred in an index, but found no data to define the type.
  userId    Json?

  @@index([userId])
  @@index([operation])
  @@index([timestamp])
}

model RankHistory {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  date      Json?
  /// Field referred in an index, but found no data to define the type.
  timeframe Json?
  /// Field referred in an index, but found no data to define the type.
  userId    Json?

  @@index([userId])
  @@index([timeframe, date])
}

model User {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt         DateTime @db.Date
  email             String   @unique
  hashedPassword    String
  name              String
  points            BigInt
  preferredLanguage String
  role              String
  updatedAt         DateTime @db.Date
  /// Field referred in an index, but found no data to define the type.
  verificationToken Json?

  @@index([verificationToken])
}

model UserAchievement {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  achievementId  Json?
  /// Field referred in an index, but found no data to define the type.
  completed      Json?
  /// Field referred in an index, but found no data to define the type.
  unlockedAt     Json?
  /// Field referred in an index, but found no data to define the type.
  userProgressId Json?

  @@unique([userProgressId, achievementId])
  @@index([completed])
  @@index([unlockedAt])
}

model UserBadge {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  badgeType      Json?
  /// Field referred in an index, but found no data to define the type.
  userProgressId Json?

  @@unique([userProgressId, badgeType])
  @@index([userProgressId])
  @@index([badgeType])
}

model UserProgress {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt            DateTime @db.Date
  currentXP            BigInt
  lastActive           DateTime @db.Date
  level                BigInt
  nextLevelXP          BigInt
  streak               BigInt
  totalPoints          BigInt
  totalXP              BigInt
  unlockedAchievements BigInt
  updatedAt            DateTime @db.Date
  userId               String   @unique @db.ObjectId

  @@index([level])
  @@index([totalPoints])
}

model UserStats {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model UserStreak {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  current     BigInt
  lastCheckin DateTime @db.Date
  longest     BigInt
  userId      String   @db.ObjectId

  @@index([userId])
}

model WifiHotspot {
  id           String              @id @default(auto()) @map("_id") @db.ObjectId
  isPublic     Boolean
  lastVerified DateTime            @db.Date
  location     WifiHotspotLocation
  name         String
  provider     String
  speed        String

  @@index([provider])
  @@index([isPublic])
}

model WifiSpot {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @db.Date
  latitude  Float
  longitude Float
  name      String
  points    BigInt
  security  String
  signal    BigInt
  speed     Float
  updatedAt DateTime @db.Date
  userId    String   @db.ObjectId
  verified  Boolean
}
